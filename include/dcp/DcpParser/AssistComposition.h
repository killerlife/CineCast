//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef __ASSIT_COMPOSITION_H_
#define __ASSIT_COMPOSITION_H_

#include "DcpParser.h"

typedef struct _rating
{
	std::string strAgency;
	std::string strLable;
}RATING;

typedef struct _video_info
{
	RATIONAL nAspectRatio;
	RATIONAL nFrameRate;

}VIDEOINFO;

typedef struct _audio_info
{
	std::string strLanguage;
}AUDIOINFO;

typedef struct _subtitle_info
{
	std::string strLanguage;
}SUBTITLEINFO;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//????????????????????????????????????????????????????????????????????????????????????????
class DCPPARSE_API CAssistComposition
{
public:
	CAssistComposition(const CCompositionPlayList* pcomp);//??????????compositionplaylist????????
	virtual ~CAssistComposition();

public:
	std::string GetUUID() const;				//????uuid
	std::string GetTitle()const;				//????????
	std::string GetKind()const;					//????????
	std::string GetVersionDescriptor()const;	//????????????
	int GetRating(std::vector<_rating>& arr_rat);//????????????????
	std::string GetCreator()const;				//??????????
	std::string GetIsssuer()const;				//??????????
	std::string GetIssueDate()const;				//????????????
	int GetReelCount()const;					//????REEL????
	long GetPlayDuration(bool second=false)const;				//????????????????
	RATIONAL GetEditRate()const;				//????????????

	_video_info GetVideoInfo()const;			//????????????
	_audio_info GetAudioInfo()const;			//????????????
	_subtitle_info GetSubtitleInfo()const;		//????????????

private:
	CCompositionPlayList* m_pComp;
protected:
	long GetReelDuration(const CComposition_Reel& reel, bool second)const;
};

#endif //__ASSIT_COMPOSITION_H_
